{"version":3,"sources":["HeroControl.js"],"names":["cc","Class","extends","Component","properties","speed","v2","maxSpeed","gravity","drag","direction","jumpSpeed","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyPressed","KEY_UP","onKeyReleased","collisionX","collisionY","prePosition","preStep","touchingNumber","onEnable","director","getCollisionManager","enabled","enabledDebugDraw","onDisable","event","keyCode","macro","KEY","a","left","d","right","w","up","jumping","y","onCollisionEnter","other","self","node","color","Color","RED","otherAabb","world","aabb","otherPreAabb","preAabb","clone","selfAabb","selfPreAabb","x","Intersection","rectRect","xMax","parent","xMin","width","touchingX","yMax","yMin","height","touchingY","onCollisionStay","group","motion","getComponent","_movedDiff","onCollisionExit","WHITE","update","dt","Math","abs"],"mappings":"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","file":"HeroControl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\cases\\collider\\Platform","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        speed: cc.v2(0, 0),\n        maxSpeed: cc.v2(2000, 2000),\n        gravity: -1000,\n        drag: 1000,\n        direction: 0,\n        jumpSpeed: 300\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        //add keyboard input listener to call turnLeft and turnRight\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyPressed, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyReleased, this);\n\n        this.collisionX = 0;\n        this.collisionY = 0;\n\n        this.prePosition = cc.v2();\n        this.preStep = cc.v2();\n\n        this.touchingNumber = 0;\n    },\n\n    onEnable: function () {\n        cc.director.getCollisionManager().enabled = true;\n        cc.director.getCollisionManager().enabledDebugDraw = true;\n    },\n\n    onDisable: function () {\n        cc.director.getCollisionManager().enabled = false;\n        cc.director.getCollisionManager().enabledDebugDraw = false;\n    },\n    \n    onKeyPressed: function (event) {\n        let keyCode = event.keyCode;\n        switch(keyCode) {\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n                this.direction = -1;\n                break;\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.direction = 1;\n                break;\n            case cc.macro.KEY.w:\n            case cc.macro.KEY.up:\n                if (!this.jumping) {\n                    this.jumping = true;\n                    this.speed.y = this.jumpSpeed;    \n                }\n                break;\n        }\n    },\n    \n    onKeyReleased: function (event) {\n        let keyCode = event.keyCode;\n        switch(keyCode) {\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.direction = 0;\n                break;\n        }\n    },\n    \n    onCollisionEnter: function (other, self) {\n        this.node.color = cc.Color.RED;\n\n        this.touchingNumber ++;\n        \n        // 1st step \n        // get pre aabb, go back before collision\n        var otherAabb = other.world.aabb;\n        var otherPreAabb = other.world.preAabb.clone();\n\n        var selfAabb = self.world.aabb;\n        var selfPreAabb = self.world.preAabb.clone();\n\n        // 2nd step\n        // forward x-axis, check whether collision on x-axis\n        selfPreAabb.x = selfAabb.x;\n        otherPreAabb.x = otherAabb.x;\n\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\n            if (this.speed.x < 0 && (selfPreAabb.xMax > otherPreAabb.xMax)) {\n                this.node.x = otherPreAabb.xMax - this.node.parent.x;\n                this.collisionX = -1;\n            }\n            else if (this.speed.x > 0 && (selfPreAabb.xMin < otherPreAabb.xMin)) {\n                this.node.x = otherPreAabb.xMin - selfPreAabb.width - this.node.parent.x;\n                this.collisionX = 1;\n            }\n\n            this.speed.x = 0;\n            other.touchingX = true;\n            return;\n        }\n\n        // 3rd step\n        // forward y-axis, check whether collision on y-axis\n        selfPreAabb.y = selfAabb.y;\n        otherPreAabb.y = otherAabb.y;\n\n        if (cc.Intersection.rectRect(selfPreAabb, otherPreAabb)) {\n            if (this.speed.y < 0 && (selfPreAabb.yMax > otherPreAabb.yMax)) {\n                this.node.y = otherPreAabb.yMax - this.node.parent.y;\n                this.jumping = false;\n                this.collisionY = -1;\n            }\n            else if (this.speed.y > 0 && (selfPreAabb.yMin < otherPreAabb.yMin)) {\n                this.node.y = otherPreAabb.yMin - selfPreAabb.height - this.node.parent.y;\n                this.collisionY = 1;\n            }\n            \n            this.speed.y = 0;\n            other.touchingY = true;\n        }    \n        \n    },\n    \n    onCollisionStay: function (other, self) {\n        if (this.collisionY === -1) {\n            if (other.node.group === 'Platform') {\n                var motion = other.node.getComponent('PlatformMotion');\n                if (motion) {\n                    this.node.x += motion._movedDiff;\n                }\n            }\n\n            // this.node.y = other.world.aabb.yMax;\n\n            // var offset = cc.v2(other.world.aabb.x - other.world.preAabb.x, 0);\n            \n            // var temp = cc.affineTransformClone(self.world.transform);\n            // temp.tx = temp.ty = 0;\n            \n            // offset = cc.pointApplyAffineTransform(offset, temp);\n            // this.node.x += offset.x;\n        }\n    },\n    \n    onCollisionExit: function (other) {\n        this.touchingNumber --;\n        if (this.touchingNumber === 0) {\n            this.node.color = cc.Color.WHITE;\n        }\n\n        if (other.touchingX) {\n            this.collisionX = 0;\n            other.touchingX = false;\n        }\n        else if (other.touchingY) {\n            other.touchingY = false;\n            this.collisionY = 0;\n            this.jumping = true;\n        }\n    },\n    \n    update: function (dt) {\n        if (this.collisionY === 0) {\n            this.speed.y += this.gravity * dt;\n            if (Math.abs(this.speed.y) > this.maxSpeed.y) {\n                this.speed.y = this.speed.y > 0 ? this.maxSpeed.y : -this.maxSpeed.y;\n            }\n        }\n\n        if (this.direction === 0) {\n            if (this.speed.x > 0) {\n                this.speed.x -= this.drag * dt;\n                if (this.speed.x <= 0) this.speed.x = 0;\n            }\n            else if (this.speed.x < 0) {\n                this.speed.x += this.drag * dt;\n                if (this.speed.x >= 0) this.speed.x = 0;\n            }\n        }\n        else {\n            this.speed.x += (this.direction > 0 ? 1 : -1) * this.drag * dt;\n            if (Math.abs(this.speed.x) > this.maxSpeed.x) {\n                this.speed.x = this.speed.x > 0 ? this.maxSpeed.x : -this.maxSpeed.x;\n            }\n        }\n\n        if (this.speed.x * this.collisionX > 0) {\n            this.speed.x = 0;\n        }\n        \n        this.prePosition.x = this.node.x;\n        this.prePosition.y = this.node.y;\n\n        this.preStep.x = this.speed.x * dt;\n        this.preStep.y = this.speed.y * dt;\n        \n        this.node.x += this.speed.x * dt;\n        this.node.y += this.speed.y * dt;\n    },\n});\n"]}