{"version":3,"sources":["VideoPlayerCtrl.js"],"names":["i18n","require","TipsManager","cc","Class","extends","Component","properties","videoPlayer","default","type","VideoPlayer","statusLabel","Label","currentTime","totalTime","resSwitchBtnLabel","_resStatus","start","init","play","pause","toggleFullscreen","sys","isBrowser","browserType","BROWSER_TYPE_MOBILE_QQ","browserVersion","test","navigator","userAgent","createTips","t","log","isFullscreen","stop","keepRatioSwitch","keepAspectRatio","getStatus","event","EventType","PLAYING","PAUSED","STOPPED","COMPLETED","META_LOADED","CLICKED","READY_TO_PLAY","onVideoPlayerEvent","sender","string","duration","getDuration","toFixed","isPlaying","toggleVisibility","enabled","playOnlineVideo","remoteURL","resourceType","ResourceType","REMOTE","LOCAL","update"],"mappings":"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","file":"VideoPlayerCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\cases\\02_ui\\09_videoplayer\\VideoPlayer","sourcesContent":["const i18n = require('i18n');\r\nconst TipsManager = require('TipsManager');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        videoPlayer: {\r\n            default: null,\r\n            type: cc.VideoPlayer\r\n        },\r\n        statusLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        currentTime: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        totalTime: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        resSwitchBtnLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        _resStatus: false,\r\n    },\r\n    start () {\r\n        TipsManager.init();\r\n    },\r\n\r\n    play () {\r\n        this.videoPlayer.play();\r\n    },\r\n\r\n    pause () {\r\n        this.videoPlayer.pause();\r\n    },\r\n\r\n    toggleFullscreen () {\r\n        if (\r\n            cc.sys.isBrowser &&\r\n            cc.sys.browserType === cc.sys.BROWSER_TYPE_MOBILE_QQ &&\r\n            cc.sys.browserVersion <= 7.2 &&\r\n            /Nexus 6/.test(navigator.userAgent)\r\n        ) {\r\n            TipsManager.createTips(i18n.t('cases/02_ui/09_videoplayer/videoPlayer.nonsupport_fullscreen'));\r\n            return cc.log('May be crash, so prohibit full screen');\r\n        }\r\n        this.videoPlayer.isFullscreen = true;\r\n    },\r\n\r\n    stop () {\r\n        this.videoPlayer.stop();\r\n    },\r\n\r\n    keepRatioSwitch () {\r\n        this.videoPlayer.keepAspectRatio = !this.videoPlayer.keepAspectRatio;\r\n    },\r\n\r\n    getStatus (event) {\r\n        switch (event) {\r\n            case cc.VideoPlayer.EventType.PLAYING:\r\n                return 'PLAYING';\r\n            case cc.VideoPlayer.EventType.PAUSED:\r\n                return 'PAUSED';\r\n            case cc.VideoPlayer.EventType.STOPPED:\r\n                return 'STOPPED';\r\n            case cc.VideoPlayer.EventType.COMPLETED:\r\n                return 'COMPLETED';\r\n            case cc.VideoPlayer.EventType.META_LOADED:\r\n                return 'META_LOADED';\r\n            case cc.VideoPlayer.EventType.CLICKED:\r\n                return 'CLICKED';\r\n            case cc.VideoPlayer.EventType.READY_TO_PLAY:\r\n                return 'READY_TO_PLAY';\r\n            default:\r\n                return 'NONE';\r\n        }\r\n    },\r\n\r\n    onVideoPlayerEvent (sender, event) {\r\n        this.statusLabel.string = this.getStatus(event);\r\n        if (event === cc.VideoPlayer.EventType.META_LOADED) {\r\n            var duration = this.videoPlayer.getDuration();\r\n            if (duration) {\r\n                this.totalTime.string = duration.toFixed(2);\r\n            }\r\n            else {\r\n                this.totalTime.string = 0;\r\n            }\r\n        }\r\n        else if (event === cc.VideoPlayer.EventType.CLICKED) {\r\n            if (this.videoPlayer.isPlaying()) {\r\n                this.videoPlayer.pause();\r\n            } else {\r\n                this.videoPlayer.play();\r\n            }\r\n        }\r\n    },\r\n\r\n    toggleVisibility () {\r\n        this.videoPlayer.enabled = !this.videoPlayer.enabled;\r\n    },\r\n\r\n    playOnlineVideo () {\r\n        this.videoPlayer.remoteURL = 'http://benchmark.cocos2d-x.org/cocosvideo.mp4';\r\n        this._resStatus = !this._resStatus;\r\n        this.resSwitchBtnLabel.string = this._resStatus ? 'Switch Resource To Local' : 'Switch Resource To Remote';\r\n        this.videoPlayer.resourceType = this._resStatus ? cc.VideoPlayer.ResourceType.REMOTE : cc.VideoPlayer.ResourceType.LOCAL;\r\n    },\r\n\r\n    update () {\r\n        if (this.currentTime && this.videoPlayer.currentTime) {\r\n            this.currentTime.string = this.videoPlayer.currentTime.toFixed(2);\r\n        }\r\n    }\r\n\r\n});\r\n"]}