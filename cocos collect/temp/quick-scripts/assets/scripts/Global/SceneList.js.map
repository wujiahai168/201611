{"version":3,"sources":["SceneList.js"],"names":["TipsManager","require","SceneList","cc","Class","extends","Component","properties","itemPrefab","default","type","Prefab","initItemCount","scrollView","ScrollView","bufferZone","createItem","x","y","name","url","item","instantiate","itemComp","getComponent","label","string","node","addChild","init","menu","sceneList","itemList","updateTimer","updateInterval","lastContentPosY","initList","scenes","game","_sceneInfos","dict","i","length","startsWith","dirname","path","replace","scenename","basename","error","dirs","Object","keys","sort","push","scenenames","j","height","itemInfo","updateItem","getPositionInView","worldPos","parent","convertToWorldSpaceAR","position","viewPos","convertToNodeSpaceAR","update","dt","items","buffer","isDown","curItemCount","offset","itemNode","newIdx","index","newInfo"],"mappings":";;;;;;AAAA,IAAMA,cAAcC,QAAQ,aAAR,CAApB;;AAEA,IAAMC,YAAYC,GAAGC,KAAH,CAAS;AACvBC,aAASF,GAAGG,SADW;;AAGvBC,gBAAY;AACRC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SADJ;AAKRC,uBAAe,CALP;AAMRC,oBAAYV,GAAGW,UANP;AAORC,oBAAY,CAPJ,CAOO;AAPP,KAHW;;AAavBC,gBAAY,oBAAUC,CAAV,EAAaC,CAAb,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2B;AACnC,YAAIC,OAAOlB,GAAGmB,WAAH,CAAe,KAAKd,UAApB,CAAX;AACA,YAAIe,WAAWF,KAAKG,YAAL,CAAkB,UAAlB,CAAf;AACA,YAAIC,QAAQF,SAASE,KAArB;AACAA,cAAMC,MAAN,GAAeP,IAAf;;AAEA,YAAIC,GAAJ,EAAS;AACLG,qBAASH,GAAT,GAAeA,GAAf;AACH;;AAED;AACAC,aAAKJ,CAAL,GAASA,CAAT;AACAI,aAAKH,CAAL,GAASA,CAAT;AACA,aAAKS,IAAL,CAAUC,QAAV,CAAmBP,IAAnB;AACA,eAAOA,IAAP;AACH,KA5BsB;;AA8BvBQ,QA9BuB,gBA8BjBC,IA9BiB,EA8BX;AACR,aAAKA,IAAL,GAAYA,IAAZ;AACA,aAAKC,SAAL,GAAiB,EAAjB;AACA,aAAKC,QAAL,GAAgB,EAAhB;AACA,aAAKC,WAAL,GAAmB,CAAnB;AACA,aAAKC,cAAL,GAAsB,GAAtB;AACA,aAAKC,eAAL,GAAuB,CAAvB,CANQ,CAMkB;AAC1BnC,oBAAY6B,IAAZ;AACA,aAAKO,QAAL;AACH,KAvCsB;;;AAyCvB;AACAA,YA1CuB,sBA0CX;AACR,YAAIC,SAASlC,GAAGmC,IAAH,CAAQC,WAArB;AACA,YAAIC,OAAO,EAAX;;AAEA,YAAIH,MAAJ,EAAY;AACR,iBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAIJ,OAAOK,MAA3B,EAAmC,EAAED,CAArC,EAAwC;AACpC,oBAAIrB,MAAMiB,OAAOI,CAAP,EAAUrB,GAApB;AACA,oBAAI,CAACA,IAAIuB,UAAJ,CAAe,oBAAf,CAAL,EAA2C;AACvC;AACH;AACD,oBAAIC,UAAUzC,GAAG0C,IAAH,CAAQD,OAAR,CAAgBxB,GAAhB,EAAqB0B,OAArB,CAA6B,oBAA7B,EAAmD,EAAnD,CAAd;AACA,oBAAIC,YAAY5C,GAAG0C,IAAH,CAAQG,QAAR,CAAiB5B,GAAjB,EAAsB,OAAtB,CAAhB;;AAEA,oBAAI,CAACwB,OAAL,EAAcA,UAAU,OAAV;AACd,oBAAI,CAACJ,KAAKI,OAAL,CAAL,EAAoB;AAChBJ,yBAAKI,OAAL,IAAgB,EAAhB;AACH;AACDJ,qBAAKI,OAAL,EAAcG,SAAd,IAA2B3B,GAA3B;AACH;AACJ,SAfD,MAgBK;AACDjB,eAAG8C,KAAH,CAAS,2BAAT;AACH;AACD;AACA,YAAIC,OAAOC,OAAOC,IAAP,CAAYZ,IAAZ,CAAX;AACAU,aAAKG,IAAL;AACA,aAAK,IAAIZ,KAAI,CAAb,EAAgBA,KAAIS,KAAKR,MAAzB,EAAiC,EAAED,EAAnC,EAAsC;AAClC,iBAAKV,SAAL,CAAeuB,IAAf,CAAoB;AAChBnC,sBAAM+B,KAAKT,EAAL,CADU;AAEhBrB,qBAAK;AAFW,aAApB;AAIA,gBAAImC,aAAaJ,OAAOC,IAAP,CAAYZ,KAAKU,KAAKT,EAAL,CAAL,CAAZ,CAAjB;AACAc,uBAAWF,IAAX;AACA,iBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAID,WAAWb,MAA/B,EAAuC,EAAEc,CAAzC,EAA4C;AACxC,oBAAIrC,OAAOoC,WAAWC,CAAX,CAAX;AACA,oBAAIpC,OAAMoB,KAAKU,KAAKT,EAAL,CAAL,EAActB,IAAd,CAAV;AACA,qBAAKY,SAAL,CAAeuB,IAAf,CAAoB,EAAEnC,UAAF,EAAQC,SAAR,EAApB;AACH;AACJ;AACD,YAAIF,IAAI,CAAR;AACA,aAAKS,IAAL,CAAU8B,MAAV,GAAmB,CAAC,KAAK1B,SAAL,CAAeW,MAAf,GAAwB,CAAzB,IAA8B,EAAjD;AACA,aAAK,IAAID,MAAI,CAAb,EAAgBA,MAAI,KAAK7B,aAAzB,EAAwC,EAAE6B,GAA1C,EAA6C;AACzC,gBAAIpB,OAAOlB,GAAGmB,WAAH,CAAe,KAAKd,UAApB,EAAgCgB,YAAhC,CAA6C,UAA7C,CAAX;AACA,gBAAIkC,WAAW,KAAK3B,SAAL,CAAeU,GAAf,CAAf;AACApB,iBAAKQ,IAAL,CAAU,KAAKC,IAAf;AACA,iBAAKH,IAAL,CAAUC,QAAV,CAAmBP,KAAKM,IAAxB;AACAT,iBAAK,EAAL;AACAG,iBAAKsC,UAAL,CAAiBlB,GAAjB,EAAoBvB,CAApB,EAAuBwC,SAASvC,IAAhC,EAAsCuC,SAAStC,GAA/C;AACA,iBAAKY,QAAL,CAAcsB,IAAd,CAAmBjC,IAAnB;AACH;AACJ,KA5FsB;;;AA8FvBuC,uBAAmB,2BAAUvC,IAAV,EAAgB;AAAE;AACjC,YAAIwC,WAAWxC,KAAKyC,MAAL,CAAYC,qBAAZ,CAAkC1C,KAAK2C,QAAvC,CAAf;AACA,YAAIC,UAAU,KAAKpD,UAAL,CAAgBc,IAAhB,CAAqBuC,oBAArB,CAA0CL,QAA1C,CAAd;AACA,eAAOI,OAAP;AACH,KAlGsB;;AAoGvBE,UApGuB,kBAoGfC,EApGe,EAoGX;AACR,aAAKnC,WAAL,IAAoBmC,EAApB;AACA,YAAI,KAAKnC,WAAL,GAAmB,KAAKC,cAA5B,EAA4C;AACxC,mBADwC,CAChC;AACX;AACD,aAAKD,WAAL,GAAmB,CAAnB;AACA,YAAIoC,QAAQ,KAAKrC,QAAjB;AACA,YAAIsC,SAAS,KAAKvD,UAAlB;AACA,YAAIwD,SAAS,KAAK5C,IAAL,CAAUT,CAAV,GAAc,KAAKiB,eAAhC,CARQ,CAQyC;AACjD,YAAIqC,eAAe,KAAKxC,QAAL,CAAcU,MAAjC;AACA,YAAI+B,SAAS,KAAKD,YAAlB;AACA,aAAK,IAAI/B,IAAI,CAAb,EAAgBA,IAAI+B,YAApB,EAAkC,EAAE/B,CAApC,EAAuC;AACnC,gBAAIpB,OAAOgD,MAAM5B,CAAN,CAAX;AACA,gBAAIiC,WAAWrD,KAAKM,IAApB;AACA,gBAAIsC,UAAU,KAAKL,iBAAL,CAAuBc,QAAvB,CAAd;AACA,gBAAIH,MAAJ,EAAY;AACR;AACA,oBAAIN,QAAQ/C,CAAR,GAAY,CAACoD,MAAb,IAAuBI,SAASxD,CAAT,GAAauD,MAAb,GAAsB,CAAjD,EAAoD;AAChD,wBAAIE,SAAStD,KAAKuD,KAAL,GAAaJ,YAA1B;AACA,wBAAIK,UAAU,KAAK9C,SAAL,CAAe4C,MAAf,CAAd;AACAtD,yBAAKsC,UAAL,CAAgBgB,MAAhB,EAAwBD,SAASxD,CAAT,GAAauD,MAArC,EAA6CI,QAAQ1D,IAArD,EAA2D0D,QAAQzD,GAAnE;AACH;AACJ,aAPD,MAOO;AACH;AACA,oBAAI6C,QAAQ/C,CAAR,GAAYoD,MAAZ,IAAsBI,SAASxD,CAAT,GAAauD,MAAb,GAAsB,CAAC,KAAK9C,IAAL,CAAU8B,MAA3D,EAAmE;AAC/D,wBAAIkB,UAAStD,KAAKuD,KAAL,GAAaJ,YAA1B;AACA,wBAAIK,WAAU,KAAK9C,SAAL,CAAe4C,OAAf,CAAd;AACAtD,yBAAKsC,UAAL,CAAgBgB,OAAhB,EAAwBD,SAASxD,CAAT,GAAauD,MAArC,EAA6CI,SAAQ1D,IAArD,EAA2D0D,SAAQzD,GAAnE;AACH;AACJ;AACJ;AACD;AACA,aAAKe,eAAL,GAAuB,KAAKR,IAAL,CAAUT,CAAjC;AACH;AArIsB,CAAT,CAAlB","file":"SceneList.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\Global","sourcesContent":["const TipsManager = require('TipsManager');\n\nconst SceneList = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        itemPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        initItemCount: 0,\n        scrollView: cc.ScrollView,\n        bufferZone: 0, // when item is away from bufferZone, we relocate it\n    },\n\n    createItem: function (x, y, name, url) {\n        var item = cc.instantiate(this.itemPrefab);\n        var itemComp = item.getComponent('ListItem');\n        var label = itemComp.label;\n        label.string = name;\n\n        if (url) {\n            itemComp.url = url;\n        }\n\n        // item.width = w;\n        item.x = x;\n        item.y = y;\n        this.node.addChild(item);\n        return item;\n    },\n\n    init (menu) {\n        this.menu = menu;\n        this.sceneList = [];\n        this.itemList = [];\n        this.updateTimer = 0;\n        this.updateInterval = 0.2;\n        this.lastContentPosY = 0; // use this variable to detect if we are scrolling up or down\n        TipsManager.init();\n        this.initList();\n    },\n\n    // use this for initialization\n    initList () {\n        var scenes = cc.game._sceneInfos;\n        var dict = {};\n\n        if (scenes) {\n            for (let i = 0; i < scenes.length; ++i) {\n                let url = scenes[i].url;\n                if (!url.startsWith('db://assets/cases/')) {\n                    continue;\n                }\n                let dirname = cc.path.dirname(url).replace('db://assets/cases/', '');\n                let scenename = cc.path.basename(url, '.fire');\n\n                if (!dirname) dirname = '_root';\n                if (!dict[dirname]) {\n                    dict[dirname] = {};\n                }\n                dict[dirname][scenename] = url;\n            }\n        }\n        else {\n            cc.error('failed to get scene list!');\n        }\n        // compile scene dict to an array\n        let dirs = Object.keys(dict);\n        dirs.sort();\n        for (let i = 0; i < dirs.length; ++i) {\n            this.sceneList.push({\n                name: dirs[i],\n                url: null\n            });\n            let scenenames = Object.keys(dict[dirs[i]]);\n            scenenames.sort();\n            for (let j = 0; j < scenenames.length; ++j) {\n                let name = scenenames[j];\n                let url = dict[dirs[i]][name];\n                this.sceneList.push({ name, url });\n            }\n        }\n        let y = 0;\n        this.node.height = (this.sceneList.length + 1) * 50;\n        for (let i = 0; i < this.initItemCount; ++i) {\n            let item = cc.instantiate(this.itemPrefab).getComponent('ListItem');\n            let itemInfo = this.sceneList[i];\n            item.init(this.menu);\n            this.node.addChild(item.node);\n            y -= 50;\n            item.updateItem (i, y, itemInfo.name, itemInfo.url);\n            this.itemList.push(item);\n        }\n    },\n\n    getPositionInView: function (item) { // get item position in scrollview's node space\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    },\n\n    update (dt) {\n        this.updateTimer += dt;\n        if (this.updateTimer < this.updateInterval) {\n            return; // we don't need to do the math every frame\n        }\n        this.updateTimer = 0;\n        let items = this.itemList;\n        let buffer = this.bufferZone;\n        let isDown = this.node.y < this.lastContentPosY; // scrolling direction\n        let curItemCount = this.itemList.length;\n        let offset = 50 * curItemCount;\n        for (let i = 0; i < curItemCount; ++i) {\n            let item = items[i];\n            let itemNode = item.node;\n            let viewPos = this.getPositionInView(itemNode);\n            if (isDown) {\n                // if away from buffer zone and not reaching top of content\n                if (viewPos.y < -buffer && itemNode.y + offset < 0) {\n                    let newIdx = item.index - curItemCount;\n                    let newInfo = this.sceneList[newIdx];\n                    item.updateItem(newIdx, itemNode.y + offset, newInfo.name, newInfo.url );\n                }\n            } else {\n                // if away from buffer zone and not reaching bottom of content\n                if (viewPos.y > buffer && itemNode.y - offset > -this.node.height) {\n                    let newIdx = item.index + curItemCount;\n                    let newInfo = this.sceneList[newIdx];\n                    item.updateItem(newIdx, itemNode.y - offset, newInfo.name, newInfo.url);\n                }\n            }\n        }\n        // update lastContentPosY\n        this.lastContentPosY = this.node.y;\n    },\n});\n"]}