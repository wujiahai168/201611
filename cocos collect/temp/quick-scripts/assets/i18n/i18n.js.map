{"version":3,"sources":["i18n.js"],"names":["Polyglot","require","data","cc","sys","language","polyglot","phrases","allowMissing","module","exports","init","lang","replace","t","key","opt"],"mappings":";;;;;;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEA,IAAIC,OAAOC,GAAGC,GAAH,CAAOC,QAAP,KAAoB,IAApB,GAA2BJ,QAAQ,IAAR,CAA3B,GAA2CA,QAAQ,IAAR,CAAtD;AACA;AACA,IAAIK,WAAW,IAAIN,QAAJ,CAAa,EAACO,SAASL,IAAV,EAAgBM,cAAc,IAA9B,EAAb,CAAf;;AAGAC,OAAOC,OAAP,GAAiB;AACb;;;;;;AAMAC,QAPa,gBAOPN,QAPO,EAOG;AACZO,eAAOP,QAAP;AACAH,eAAOG,aAAa,IAAb,GAAoBJ,QAAQ,IAAR,CAApB,GAAoCA,QAAQ,IAAR,CAA3C;AACAK,iBAASO,OAAT,CAAiBX,IAAjB;AACH,KAXY;;AAYb;;;;;;;;;;;;;;AAcAY,KA1Ba,aA0BVC,GA1BU,EA0BLC,GA1BK,EA0BA;AACT,eAAOV,SAASQ,CAAT,CAAWC,GAAX,EAAgBC,GAAhB,CAAP;AACH;AA5BY,CAAjB","file":"i18n.js","sourceRoot":"..\\..\\..\\..\\assets\\i18n","sourcesContent":["const Polyglot = require('polyglot');\n\nlet data = cc.sys.language === 'zh' ? require('zh') : require('en');\n// let polyglot = null;\nlet polyglot = new Polyglot({phrases: data, allowMissing: true});\n\n\nmodule.exports = {\n    /**\n     * This method allow you to switch language during runtime, language argument should be the same as your data file name\n     * such as when language is 'zh', it will load your 'zh.js' data source.\n     * @method init\n     * @param language - the language specific data file name, such as 'zh' to load 'zh.js'\n     */\n    init (language) {\n        lang = language;\n        data = language === 'zh' ? require('zh') : require('en');\n        polyglot.replace(data);\n    },\n    /**\n     * this method takes a text key as input, and return the localized string\n     * Please read https://github.com/airbnb/polyglot.js for details\n     * @method t\n     * @return {String} localized string\n     * @example\n     *\n     * var myText = i18n.t('MY_TEXT_KEY');\n     *\n     * // if your data source is defined as\n     * // {\"hello_name\": \"Hello, %{name}\"}\n     * // you can use the following to interpolate the text\n     * var greetingText = i18n.t('hello_name', {name: 'nantas'}); // Hello, nantas\n     */\n    t (key, opt) {\n        return polyglot.t(key, opt);\n    }\n};"]}