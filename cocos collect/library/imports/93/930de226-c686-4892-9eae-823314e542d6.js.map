{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\cases\\05_scripting\\04_scheduler/assets\\cases\\05_scripting\\04_scheduler\\scheduleCallbacks.js"],"names":["cc","Class","extends","Component","properties","time","default","counter","Label","_callback","node","stopAllActions","runAction","seq","repeat","counting","string","toFixed","onLoad","squashAction","scaleTo","stretchAction","scaleBackAction","moveUpAction","moveBy","v2","easing","easeCubicActionOut","moveDownAction","easeCubicActionIn","sequence","update","dt","stopCounting","unscheduleAllCallbacks","repeatSchedule","schedule","oneSchedule","scheduleOnce","cancelSchedules"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,cAAM;AACFC,qBAAS;AADP,SADE;;AAKRC,iBAASP,GAAGQ;AALJ,KAHP;;AAWLC,eAAW,qBAAY;AACnB,aAAKC,IAAL,CAAUC,cAAV;AACA,aAAKD,IAAL,CAAUE,SAAV,CAAoB,KAAKC,GAAzB;AACA,YAAI,KAAKC,MAAT,EAAiB;AACb,iBAAKC,QAAL,GAAgB,IAAhB;AACH,SAFD,MAGK;AACD,iBAAKA,QAAL,GAAgB,KAAhB;AACH;AACD,aAAKV,IAAL,GAAY,CAAZ;AACA,aAAKE,OAAL,CAAaS,MAAb,GAAsB,KAAKX,IAAL,CAAUY,OAAV,CAAkB,CAAlB,IAAuB,IAA7C;AACH,KAtBI;;AAwBL;AACAC,YAAQ,kBAAY;AAChB,YAAIC,eAAenB,GAAGoB,OAAH,CAAW,GAAX,EAAgB,CAAhB,EAAmB,GAAnB,CAAnB;AACA,YAAIC,gBAAgBrB,GAAGoB,OAAH,CAAW,GAAX,EAAgB,CAAhB,EAAmB,GAAnB,CAApB;AACA,YAAIE,kBAAkBtB,GAAGoB,OAAH,CAAW,GAAX,EAAgB,CAAhB,EAAmB,CAAnB,CAAtB;AACA,YAAIG,eAAevB,GAAGwB,MAAH,CAAU,CAAV,EAAaxB,GAAGyB,EAAH,CAAM,CAAN,EAAS,GAAT,CAAb,EAA4BC,MAA5B,CAAmC1B,GAAG2B,kBAAH,EAAnC,CAAnB;AACA,YAAIC,iBAAiB5B,GAAGwB,MAAH,CAAU,CAAV,EAAaxB,GAAGyB,EAAH,CAAM,CAAN,EAAS,CAAC,GAAV,CAAb,EAA6BC,MAA7B,CAAoC1B,GAAG6B,iBAAH,EAApC,CAArB;AACA,aAAKhB,GAAL,GAAWb,GAAG8B,QAAH,CAAYX,YAAZ,EACYE,aADZ,EAEYE,YAFZ,EAGYD,eAHZ,EAIYM,cAJZ,EAKYT,YALZ,EAMYG,eANZ,CAAX;;AAQA,aAAKf,OAAL,CAAaS,MAAb,GAAsB,KAAKX,IAAL,CAAUY,OAAV,CAAkB,CAAlB,IAAuB,IAA7C;AACA,aAAKF,QAAL,GAAgB,KAAhB;AACA,aAAKD,MAAL,GAAc,KAAd;AACH,KA1CI;;AA4CL;AACAiB,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAI,KAAKjB,QAAT,EAAmB;AACf,iBAAKV,IAAL,IAAa2B,EAAb;AACA,iBAAKzB,OAAL,CAAaS,MAAb,GAAsB,KAAKX,IAAL,CAAUY,OAAV,CAAkB,CAAlB,IAAuB,IAA7C;AACH;AACJ,KAlDI;;AAoDLgB,kBAAc,wBAAY;AACtB,aAAKC,sBAAL;AACA,aAAKnB,QAAL,GAAgB,KAAhB;AACA,aAAKV,IAAL,GAAY,CAAZ;AACA,aAAKE,OAAL,CAAaS,MAAb,GAAsB,KAAKX,IAAL,CAAUY,OAAV,CAAkB,CAAlB,IAAuB,IAA7C;AACH,KAzDI;;AA2DLkB,oBAAgB,0BAAY;AACxB,aAAKF,YAAL;AACA,aAAKG,QAAL,CAAc,KAAK3B,SAAnB,EAA8B,CAA9B;AACA,aAAKK,MAAL,GAAc,IAAd;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACH,KAhEI;;AAkELsB,iBAAa,uBAAY;AACrB,aAAKJ,YAAL;AACA,aAAKK,YAAL,CAAkB,KAAK7B,SAAvB,EAAkC,CAAlC;AACA,aAAKK,MAAL,GAAc,KAAd;AACA,aAAKC,QAAL,GAAgB,IAAhB;AACH,KAvEI;;AAyELwB,qBAAiB,2BAAY;AACzB,aAAKzB,MAAL,GAAc,KAAd;AACA,aAAKmB,YAAL;AACH;AA5EI,CAAT","file":"scheduleCallbacks.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\cases\\05_scripting\\04_scheduler","sourcesContent":["cc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        time: {\n            default: 5\n        },\n\n        counter: cc.Label\n    },\n    \n    _callback: function () {\n        this.node.stopAllActions();\n        this.node.runAction(this.seq);\n        if (this.repeat) {\n            this.counting = true;\n        }\n        else {\n            this.counting = false;\n        }\n        this.time = 5;\n        this.counter.string = this.time.toFixed(2) + ' s';\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        var squashAction = cc.scaleTo(0.2, 1, 0.6);\n        var stretchAction = cc.scaleTo(0.2, 1, 1.2);\n        var scaleBackAction = cc.scaleTo(0.1, 1, 1);\n        var moveUpAction = cc.moveBy(1, cc.v2(0, 100)).easing(cc.easeCubicActionOut());\n        var moveDownAction = cc.moveBy(1, cc.v2(0, -100)).easing(cc.easeCubicActionIn());\n        this.seq = cc.sequence(squashAction,\n                               stretchAction,\n                               moveUpAction,\n                               scaleBackAction,\n                               moveDownAction,\n                               squashAction,\n                               scaleBackAction);\n                               \n        this.counter.string = this.time.toFixed(2) + ' s';\n        this.counting = false;\n        this.repeat = false;\n    },\n\n    // called every frame\n    update: function (dt) {\n        if (this.counting) {\n            this.time -= dt;\n            this.counter.string = this.time.toFixed(2) + ' s';\n        }\n    },\n    \n    stopCounting: function () {\n        this.unscheduleAllCallbacks();\n        this.counting = false;\n        this.time = 5;\n        this.counter.string = this.time.toFixed(2) + ' s';\n    },\n    \n    repeatSchedule: function () {\n        this.stopCounting();\n        this.schedule(this._callback, 5);\n        this.repeat = true;\n        this.counting = true;\n    },\n    \n    oneSchedule: function () {\n        this.stopCounting();\n        this.scheduleOnce(this._callback, 5);\n        this.repeat = false;\n        this.counting = true;\n    },\n    \n    cancelSchedules: function () {\n        this.repeat = false;\n        this.stopCounting();\n    }\n});\n"]}