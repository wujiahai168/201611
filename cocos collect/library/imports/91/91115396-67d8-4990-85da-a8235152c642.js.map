{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\cases\\spine/assets\\cases\\spine\\SpineCtrl.js"],"names":["cc","Class","extends","Component","editor","requireComponent","sp","Skeleton","properties","mixTime","onLoad","spine","getComponent","_setMix","setStartListener","animationName","trackEntry","animation","name","log","trackIndex","setInterruptListener","setEndListener","setDisposeListener","setCompleteListener","loopCount","clearTrack","setEventListener","event","data","intValue","floatValue","stringValue","_hasStop","toggleDebugSlots","debugSlots","toggleDebugBones","debugBones","toggleTimeScale","timeScale","stop","walk","setAnimation","run","jump","oldAnim","addAnimation","shoot","anim1","anim2","setMix"],"mappings":"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","file":"SpineCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\cases\\spine","sourcesContent":["cc.Class({\n    extends: cc.Component,\n    editor: {\n        requireComponent: sp.Skeleton\n    },\n\n    properties: {\n        mixTime: 0.2\n    },\n\n    onLoad () {\n        var spine = this.spine = this.getComponent('sp.Skeleton');\n        this._setMix('walk', 'run');\n        this._setMix('run', 'jump');\n        this._setMix('walk', 'jump');\n        \n        spine.setStartListener(trackEntry => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            cc.log(\"[track %s][animation %s] start.\", trackEntry.trackIndex, animationName);\n        });\n        spine.setInterruptListener(trackEntry => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            cc.log(\"[track %s][animation %s] interrupt.\", trackEntry.trackIndex, animationName);\n        });\n        spine.setEndListener(trackEntry => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            cc.log(\"[track %s][animation %s] end.\", trackEntry.trackIndex, animationName);\n        });\n        spine.setDisposeListener(trackEntry => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            cc.log(\"[track %s][animation %s] will be disposed.\", trackEntry.trackIndex, animationName);\n        });\n        spine.setCompleteListener((trackEntry, loopCount) => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            if (animationName === 'shoot') {\n                this.spine.clearTrack(1);\n            }\n            cc.log(\"[track %s][animation %s] complete: %s\", trackEntry.trackIndex, animationName, loopCount);\n        });\n        spine.setEventListener((trackEntry, event) => {\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\n            cc.log(\"[track %s][animation %s] event: %s, %s, %s, %s\", trackEntry.trackIndex, animationName, event.data.name, event.intValue, event.floatValue, event.stringValue);\n        });\n\n        this._hasStop = false;\n    },\n    \n    // OPTIONS\n    \n    toggleDebugSlots () {\n        this.spine.debugSlots = !this.spine.debugSlots;\n    },\n    \n    toggleDebugBones () {\n        this.spine.debugBones = !this.spine.debugBones;\n    },\n    \n    toggleTimeScale () {\n        if (this.spine.timeScale === 1.0) {\n            this.spine.timeScale = 0.3;\n        }\n        else {\n            this.spine.timeScale = 1.0;\n        }\n    },\n    \n    // ANIMATIONS\n    \n    stop () {\n        this.spine.clearTrack(0);\n        this._hasStop = true;\n    },\n\n    walk () {\n        this.spine.setAnimation(0, 'walk', true);\n        this._hasStop = false;\n    },\n    \n    run () {\n        this.spine.setAnimation(0, 'run', true);\n        this._hasStop = false;\n    },\n    \n    jump () {\n        var oldAnim = this.spine.animation;\n        this.spine.setAnimation(0, 'jump', false);\n        if (oldAnim && !this._hasStop) {\n            this.spine.addAnimation(0, oldAnim === 'run' ? 'run' : 'walk', true, 0);\n        }\n    },\n    \n    shoot () {\n        this.spine.setAnimation(1, 'shoot', false);\n    },\n    \n    //\n    \n    _setMix (anim1, anim2) {\n        this.spine.setMix(anim1, anim2, this.mixTime);\n        this.spine.setMix(anim2, anim1, this.mixTime);\n    }\n});\n"]}