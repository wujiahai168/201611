{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\cases\\02_ui\\08_editBox\\EditBox/assets\\cases\\02_ui\\08_editBox\\EditBox\\EditboxCtrl.js"],"names":["i18n","require","cc","Class","extends","Component","properties","singleLineText","default","type","EditBox","singleLinePassword","multiLineText","showEditorBoxLabel","Label","onLoad","singleLineEditBoxDidBeginEditing","sender","log","node","name","singleLineEditBoxDidChanged","text","singleLineEditBoxDidEndEditing","string","singleLinePasswordEditBoxDidBeginEditing","singleLinePasswordEditBoxDidChanged","singleLinePasswordEditBoxDidEndEditing","multiLinePasswordEditBoxDidBeginEditing","multiLinePasswordEditBoxDidChanged","multiLinePasswordEditBoxDidEndEditing","buttonClicked","t"],"mappings":";;;;;;AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,wBAAgB;AACZC,qBAAS,IADG;AAEZC,kBAAMP,GAAGQ;AAFG,SAVR;;AAeRC,4BAAoB;AAChBH,qBAAS,IADO;AAEhBC,kBAAMP,GAAGQ;AAFO,SAfZ;;AAoBRE,uBAAe;AACXJ,qBAAS,IADE;AAEXC,kBAAMP,GAAGQ;AAFE,SApBP;;AAyBRG,4BAAoB;AAChBL,qBAAS,IADO;AAEhBC,kBAAMP,GAAGY;AAFO;;AAzBZ,KAHP;;AAmCL;AACAC,YAAQ,kBAAY,CAEnB,CAtCI;;AAwCLC,sCAAkC,0CAASC,MAAT,EAAiB;AAC/Cf,WAAGgB,GAAH,CAAOD,OAAOE,IAAP,CAAYC,IAAZ,GAAmB,qCAA1B;AACH,KA1CI;;AA4CLC,iCAA6B,qCAASC,IAAT,EAAeL,MAAf,EAAuB;AAChDf,WAAGgB,GAAH,CAAOD,OAAOE,IAAP,CAAYC,IAAZ,GAAmB,kCAAnB,GAAwDE,IAA/D;AACH,KA9CI;;AAgDLC,oCAAgC,wCAASN,MAAT,EAAiB;AAC7Cf,WAAGgB,GAAH,CAAOD,OAAOE,IAAP,CAAYC,IAAZ,GAAmB,qCAAnB,GAA2D,KAAKb,cAAL,CAAoBiB,MAAtF;AACH,KAlDI;;AAoDLC,8CAA0C,kDAASR,MAAT,EAAiB;AACvDf,WAAGgB,GAAH,CAAOD,OAAOE,IAAP,CAAYC,IAAZ,GAAmB,8CAA1B;AACH,KAtDI;;AAwDLM,yCAAqC,6CAASJ,IAAT,EAAeL,MAAf,EAAuB;AACxDf,WAAGgB,GAAH,CAAOD,OAAOE,IAAP,CAAYC,IAAZ,GAAmB,2CAAnB,GAAiEE,IAAxE;AACH,KA1DI;;AA4DLK,4CAAwC,gDAASV,MAAT,EAAiB;AACrDf,WAAGgB,GAAH,CAAOD,OAAOE,IAAP,CAAYC,IAAZ,GAAmB,8CAAnB,GAAoE,KAAKT,kBAAL,CAAwBa,MAAnG;AACH,KA9DI;;AAgELI,6CAAyC,iDAASX,MAAT,EAAiB;AACtDf,WAAGgB,GAAH,CAAOD,OAAOE,IAAP,CAAYC,IAAZ,GAAmB,oCAA1B;AACH,KAlEI;;AAoELS,wCAAoC,4CAASP,IAAT,EAAeL,MAAf,EAAuB;AACvDf,WAAGgB,GAAH,CAAOD,OAAOE,IAAP,CAAYC,IAAZ,GAAmB,iCAAnB,GAAuDE,IAA9D;AACH,KAtEI;;AAwELQ,2CAAuC,+CAASb,MAAT,EAAiB;AACpDf,WAAGgB,GAAH,CAAOD,OAAOE,IAAP,CAAYC,IAAZ,GAAmB,oCAAnB,GAA0D,KAAKR,aAAL,CAAmBY,MAApF;AACH,KA1EI;AA2ELO,mBAAe,yBAAW;AACtB7B,WAAGgB,GAAH,CAAO,iBAAP;AACA,YAAI,KAAKX,cAAL,CAAoBiB,MAApB,KAA+B,EAAnC,EAAuC;AACnC,iBAAKX,kBAAL,CAAwBW,MAAxB,GAAiCxB,KAAKgC,CAAL,CAAO,qCAAP,IAAgD,KAAKzB,cAAL,CAAoBiB,MAArG;AACH,SAFD,MAGK;AACD,iBAAKX,kBAAL,CAAwBW,MAAxB,GAAiC,EAAjC;AACH;AACJ;;AAED;AACA;;AAEA;AAxFK,CAAT","file":"EditboxCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\cases\\02_ui\\08_editBox\\EditBox","sourcesContent":["const i18n = require('i18n');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        singleLineText: {\n            default: null,\n            type: cc.EditBox,\n        },\n\n        singleLinePassword: {\n            default: null,\n            type: cc.EditBox,\n        },\n\n        multiLineText: {\n            default: null,\n            type: cc.EditBox\n        },\n\n        showEditorBoxLabel: {\n            default: null,\n            type: cc.Label\n        }\n\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    singleLineEditBoxDidBeginEditing: function(sender) {\n        cc.log(sender.node.name + \" single line editBoxDidBeginEditing\");\n    },\n\n    singleLineEditBoxDidChanged: function(text, sender) {\n        cc.log(sender.node.name + \" single line editBoxDidChanged: \" + text);\n    },\n\n    singleLineEditBoxDidEndEditing: function(sender) {\n        cc.log(sender.node.name + \" single line editBoxDidEndEditing: \" + this.singleLineText.string);\n    },\n\n    singleLinePasswordEditBoxDidBeginEditing: function(sender) {\n        cc.log(sender.node.name + \" single line password editBoxDidBeginEditing\");\n    },\n\n    singleLinePasswordEditBoxDidChanged: function(text, sender) {\n        cc.log(sender.node.name + \" single line password editBoxDidChanged: \" + text);\n    },\n\n    singleLinePasswordEditBoxDidEndEditing: function(sender) {\n        cc.log(sender.node.name + \" single line password editBoxDidEndEditing: \" + this.singleLinePassword.string);\n    },\n\n    multiLinePasswordEditBoxDidBeginEditing: function(sender) {\n        cc.log(sender.node.name + \" multi line editBoxDidBeginEditing\");\n    },\n\n    multiLinePasswordEditBoxDidChanged: function(text, sender) {\n        cc.log(sender.node.name + \" multi line editBoxDidChanged: \" + text);\n    },\n\n    multiLinePasswordEditBoxDidEndEditing: function(sender) {\n        cc.log(sender.node.name + \" multi line editBoxDidEndEditing: \" + this.multiLineText.string);\n    },\n    buttonClicked: function() {\n        cc.log(\"button Clicked!\");\n        if (this.singleLineText.string !== \"\") {\n            this.showEditorBoxLabel.string = i18n.t(\"cases/02_ui/07_editBox/editbox.js.1\") + this.singleLineText.string;\n        }\n        else {\n            this.showEditorBoxLabel.string = \"\";\n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"]}