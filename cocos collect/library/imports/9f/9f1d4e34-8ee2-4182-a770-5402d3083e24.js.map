{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\cases\\03_gameplay\\02_actions\\SequenceAction/assets\\cases\\03_gameplay\\02_actions\\SequenceAction\\SequenceAction.js"],"names":["cc","Class","extends","Component","properties","label","default","type","Label","start","startTime","eachTime","sequence1","sequence","moveBy","p","repeat","sequence2","node","runAction","callFunc","Date","now","difference","Math","abs","string","toFixed","color"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACTC,eAAO;AACHC,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN;AADE,KAHP;;AAULC,SAVK,mBAUI;AAAA;;AACL,YAAIC,YAAY,CAAhB;AACA,YAAMC,WAAW,GAAjB;;AAEA,YAAIC,YAAYZ,GAAGa,QAAH,CACZb,GAAGc,MAAH,CAAUH,QAAV,EAAoBX,GAAGe,CAAH,CAAK,CAAL,EAAQ,CAAC,GAAT,CAApB,CADY,EAEZf,GAAGc,MAAH,CAAUH,WAAW,CAArB,EAAwBX,GAAGe,CAAH,CAAK,CAAL,EAAQ,GAAR,CAAxB,CAFY,EAGdC,MAHc,CAGP,CAHO,CAAhB;;AAKA,YAAIC,YAAYjB,GAAGa,QAAH,CACZb,GAAGc,MAAH,CAAUH,QAAV,EAAoBX,GAAGe,CAAH,CAAK,CAAL,EAAQ,CAAC,GAAT,CAApB,CADY,EAEZf,GAAGc,MAAH,CAAUH,QAAV,EAAoBX,GAAGe,CAAH,CAAK,CAAL,EAAQ,GAAR,CAApB,CAFY,EAGdC,MAHc,CAGP,CAHO,CAAhB;;AAKA,aAAKE,IAAL,CAAUC,SAAV,CACInB,GAAGa,QAAH,CACIb,GAAGoB,QAAH,CAAY,YAAM;AACdV,wBAAYW,KAAKC,GAAL,EAAZ;AACH,SAFD,CADJ,EAIIV,SAJJ,EAKIK,SALJ,EAMIjB,GAAGoB,QAAH,CAAY,YAAM;AACd,gBAAIG,aAAaC,KAAKC,GAAL,CAASJ,KAAKC,GAAL,KAAaZ,SAAtB,IAAmC,IAApD;AACA,gBAAIa,aAAaZ,WAAW,CAAxB,IAA6B,IAAjC,EAAuC;AACnC,sBAAKN,KAAL,CAAWqB,MAAX,GAAoB,0BAA0BH,WAAWI,OAAX,CAAmB,CAAnB,CAA9C;AACA,sBAAKtB,KAAL,CAAWa,IAAX,CAAgBU,KAAhB,GAAwB5B,GAAG4B,KAAH,CAAS,GAAT,EAAa,CAAb,EAAe,CAAf,CAAxB;AACH,aAHD,MAIK;AACD,sBAAKvB,KAAL,CAAWqB,MAAX,GAAoB,2BAA2BH,WAAWI,OAAX,CAAmB,CAAnB,CAA/C;AACA,sBAAKtB,KAAL,CAAWa,IAAX,CAAgBU,KAAhB,GAAwB5B,GAAG4B,KAAH,CAAS,CAAT,EAAW,GAAX,EAAe,CAAf,CAAxB;AACH;AACJ,SAVD,CANJ,CADJ;AAoBH;AA5CI,CAAT","file":"SequenceAction.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\cases\\03_gameplay\\02_actions\\SequenceAction","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n       label: {\n           default: null,\n           type: cc.Label\n       },\n    },\n\n    start () {\n        var startTime = 0; \n        const eachTime = 0.5;\n\n        let sequence1 = cc.sequence(\n            cc.moveBy(eachTime, cc.p(0, -300)),       \n            cc.moveBy(eachTime / 2, cc.p(0, 300)),\n        ).repeat(2);\n\n        let sequence2 = cc.sequence(\n            cc.moveBy(eachTime, cc.p(0, -200)),\n            cc.moveBy(eachTime, cc.p(0, 200)),\n        ).repeat(2);\n\n        this.node.runAction(\n            cc.sequence(\n                cc.callFunc(() => {\n                    startTime = Date.now();\n                }),\n                sequence1,\n                sequence2,\n                cc.callFunc(() => {\n                    var difference = Math.abs(Date.now() - startTime) / 1000;\n                    if (difference - eachTime * 7 >= 0.05) {\n                        this.label.string = \"Failed - ElapseTime: \" + difference.toFixed(1);\n                        this.label.node.color = cc.color(255,0,0);\n                    }\n                    else {\n                        this.label.string = \"Succeed - ElapseTime: \" + difference.toFixed(1);\n                        this.label.node.color = cc.color(0,255,0);\n                    } \n                })\n            )\n        );\n    }\n});\n"]}